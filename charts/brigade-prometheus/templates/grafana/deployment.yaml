apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "brigade-prometheus.grafana.fullname" . }}
  labels:
    {{- include "brigade-prometheus.labels" . | nindent 4 }}
    {{- include "brigade-prometheus.grafana.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "brigade-prometheus.selectorLabels" . | nindent 6 }}
      {{- include "brigade-prometheus.grafana.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "brigade-prometheus.selectorLabels" . | nindent 8 }}
        {{- include "brigade-prometheus.grafana.labels" . | nindent 8 }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/grafana/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/grafana/secret.yaml") . | sha256sum }}
    spec:
      containers:
      - name: grafana
        image: {{ .Values.grafana.image.repository }}:{{ default .Chart.AppVersion .Values.grafana.image.tag }}
        imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
        env:
        {{- if .Values.grafana.auth.proxy }}
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_DISABLE_LOGIN_FORM
          value: "true"
        {{- end }}
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "brigade-prometheus.grafana.fullname" . }}
              key: adminUsername
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "brigade-prometheus.grafana.fullname" . }}
              key: adminPassword
        volumeMounts:
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-storage
          mountPath: /var/lib/grafana/data
        ports:
        - containerPort: 3000
          name: http-grafana
          protocol: TCP
      {{- if .Values.grafana.auth.proxy }}
      - name: nginx
        image: {{ .Values.nginx.image.repository }}:{{ default .Chart.AppVersion .Values.nginx.image.tag }}
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/
        ports:
        - containerPort: 80
          name: nginx-grafana
          protocol: TCP
      {{- end }}
      volumes:
      {{- if .Values.grafana.auth.proxy }}
      - name: nginx-config
        configMap:
          name: {{ include "brigade-prometheus.nginx.fullname" . }}
      {{- end }}
      - name: grafana-datasources
        configMap:
          name: {{ include "brigade-prometheus.grafana.fullname" . }}-datasources
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: pvc-{{ include "brigade-prometheus.grafana.fullname" . }}
      {{- with .Values.grafana.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.grafana.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
